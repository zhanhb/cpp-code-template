if (NOT "${CMAKE_VERSION}" VERSION_LESS 3.0)
    macro(add_interface_library)
        foreach (name ${ARGV})
            add_library("${name}" INTERFACE)
        endforeach ()
    endmacro()
    macro(target_compile_options_for_interface name)
        target_compile_options("${name}" INTERFACE ${ARGN})
    endmacro()
    macro(link_libraries_to_interface name scope) # supports [3.0,)
        if ("${scope}" MATCHES "^(PUBLIC|PRIVATE|INTERFACE)$")
            target_link_libraries("${name}" "${scope}" ${ARGN})
        else ()
            target_link_libraries("${name}" PUBLIC "${scope}" ${ARGN})
        endif ()
    endmacro()
elseif (NOT "${CMAKE_VERSION}" VERSION_LESS 2.8.12)
    macro(add_interface_library)
        foreach (name ${ARGV})
            add_library("${name}" SHARED IMPORTED)
            set_property(TARGET "${name}" PROPERTY IMPORTED_LOCATION "${CMAKE_CURRENT_LIST_FILE}")
        endforeach ()
    endmacro()
    macro(populate_property name from to)
        foreach (arg ${ARGN})
            set_property(TARGET "${name}" APPEND PROPERTY "${to}" "$<TARGET_PROPERTY:${arg},${from}>")
        endforeach ()
    endmacro()
    macro(target_compile_options_for_interface name)
        set_property(TARGET "${name}" APPEND PROPERTY INTERFACE_COMPILE_OPTIONS ${ARGN})
    endmacro()
    function(do_link_interface name)
        set_property(TARGET "${name}" APPEND PROPERTY INTERFACE_LINK_LIBRARIES ${ARGN})
        cmake_policy(GET CMP0022 CMP0022)
        if (NOT "${CMP0022}" MATCHES "^NEW$")
            set_property(TARGET "${name}" APPEND PROPERTY LINK_INTERFACE_LIBRARIES ${ARGN})
        endif ()
    endfunction()
    macro(do_link_private name)
        populate_property("${name}" INTERFACE_COMPILE_OPTIONS COMPILE_OPTIONS ${ARGN})
    endmacro()
    macro(link_libraries_to_interface name scope)
        if ("${scope}" MATCHES "^(PUBLIC|PRIVATE|INTERFACE)$")
            add_dependencies("${name}" ${ARGN})
            if ("${scope}" MATCHES "^(PUBLIC|INTERFACE)$")
                do_link_interface("${name}" ${ARGN})
            endif ()
            if ("${scope}" MATCHES "^(PUBLIC|PRIVATE)$")
                do_link_private("${name}" ${ARGN})
            endif ()
        else ()
            add_dependencies("${name}" "${scope}" ${ARGN})
            do_link_interface("${name}" "${scope}" ${ARGN})
            do_link_private("${name}" "${scope}" ${ARGN})
        endif ()
    endmacro()
endif ()
